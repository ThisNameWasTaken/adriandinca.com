@import './variables.scss';

$carousel-animation-duration: length($slides) * $slide-animation-duration;

@mixin scroll-animation($easing, $slide) {
  $i: index($slides, $slide) - 1; // Index starts at 1.

  animation: scroll-slide $carousel-animation-duration $easing
      // delay by the time it takes to scroll the previous slides
      // and to play the first slide enter animation
      $slide-animation-duration * $i + $slide-change-duration infinite,
    scroll-slide--first-enter $slide-change-duration $easing
      // delay by the time it takes to scroll the previous slides
      $slide-animation-duration * $i 1;
}

// The percentage that animating the current slide
// takes form the whole animation.
$animation-percentage: 100 / length($slides);

// The percentage that animating the enter or exit
// of the current slide takes form the whole animation.
$change-percentage: percentage(
  $slide-change-duration / $carousel-animation-duration
);

$enter-animation-start: 100% - $change-percentage;

$enter-animation-end: 0%;

$exit-animation-start: $animation-percentage - $change-percentage;

$exit-animation-end: percentage($animation-percentage / 100);

@keyframes scroll-slide {
  // TODO: consider setting opacity to 0.
  #{$enter-animation-start - 0.0001%} {
    transform: translateY(-100vh);
  }

  #{$enter-animation-start} {
    transform: translateY(100vh);
  }

  #{$enter-animation-end} {
    transform: translateY(0);
  }

  #{$exit-animation-start} {
    transform: translateY(0);
  }

  #{$exit-animation-end} {
    transform: translateY(-100vh);
  }

  100% {
    transform: translateY(0);
  }
}

@keyframes scroll-slide--first-enter {
  from {
    transform: translateY(100vh);
  }

  to {
    transform: translateY(0);
  }
}
